name: CD main
on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      # מעתיקים את הסיקרט למשתנה סביבה
      KUBECONFIG_B64: ${{ secrets.KUBECONFIG_B64 }}

    steps:
      - uses: actions/checkout@v4

      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push image (latest + SHA)
        run: |
          REPO_LC=$(echo "${GITHUB_REPOSITORY}" | tr '[:upper:]' '[:lower:]')
          IMAGE=ghcr.io/${REPO_LC}
          docker build -t ${IMAGE}:latest Project
          docker tag ${IMAGE}:latest ${IMAGE}:${GITHUB_SHA}
          docker push ${IMAGE}:latest
          docker push ${IMAGE}:${GITHUB_SHA}

      # --- Deploy only if KUBECONFIG_B64 is set ---

      - name: Setup kubectl
        if: ${{ env.KUBECONFIG_B64 != '' }}
        uses: azure/setup-kubectl@v4

      - name: Write kubeconfig from secret
        if: ${{ env.KUBECONFIG_B64 != '' }}
        run: |
          mkdir -p $HOME/.kube
          echo "${KUBECONFIG_B64}" | base64 -d > $HOME/.kube/config

      - name: Update K8s deployment to new image (pin SHA)
        if: ${{ env.KUBECONFIG_B64 != '' }}
        run: |
          REPO_LC=$(echo "${GITHUB_REPOSITORY}" | tr '[:upper:]' '[:lower:]')
          kubectl -n prod set image deploy/fm-app app=ghcr.io/${REPO_LC}:${GITHUB_SHA}
          kubectl -n prod rollout status deploy/fm-app
